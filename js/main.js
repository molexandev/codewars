'use strict';

//TODO Вам дадуть слово. Ваше завдання - повернути середній символ слова. Якщо довжина слова непарна, поверніть середній символ. Якщо довжина слова парна, поверніть 2 середніх символи. #Приклади:

//* Kata.getMiddle("test") should return "es"

//* Kata.getMiddle("testing") should return "t"

//* Kata.getMiddle("middle") should return "dd"

//* Kata.getMiddle("A") should return "A"

// todo Введення. Слово (рядок) довжини 0 < str < 1000(у javascript ви можете отримати трохи більше 1000 у деяких тестових випадках через помилку в тестових випадках). Тестувати для цього не потрібно. Це лише для того, щоб сказати вам, що вам не потрібно турбуватися про те, що час очікування вашого рішення закінчиться. Вихід: Середній символ(и) слова, представленого у вигляді рядка.

// function getMiddle(s) {
//    let str = s.split('');
//    let midelem = Math.floor(str.length / 2),
//       midelem2 = str.length / 2 - 1,
//       midelem3 = str.length / 2;

//    if (str.length % 2 > 0) {
//       return str[midelem];
//    } else {
//       return str[midelem2] + str[midelem3];
//    }
// }

// console.log(getMiddle('wordsisbeautiful   '));

// TODO Це досить просто. Ваша мета — створити функцію, яка видаляє перший і останній символи рядка. Вам надається один параметр, вихідний рядок. Вам не потрібно турбуватися про рядки з менш ніж двома символами.

// Var 1

// function removeChar(str) {
//    let string = str.split(''); // Розбиваємо рядок на масив символів
//    string.pop(); // Видаляємо останній символ
//    string.shift(); // Видаляємо перший символ
//    return string.join(''); // Об'єднуємо масив назад у рядок і повертаємо результат
// }

// console.log(removeChar('world'));

// Var 2

// function removeChar(str) {
//    return str.slice(1, -1);
// }

// console.log(removeChar('world'));

// TODO Напишіть функцію, яка приймає ціле число n та рядок s як параметри та повертає рядок із s рівним повторенням n.Приклади (введення -> вихід)

//* 6, "I"     -> "IIIIII"
//* 5, "Hello" -> "HelloHelloHelloHelloHello"

// function repeatStr(n, s) {
//    let str = '';
//    for (let i = 1; i <= n; i++) {
//       str += s;
//    }
//    return str;
// }

// console.log(repeatStr(77, 'World'));

// TODO Напишіть функцію для перетворення імені в ініціали. Ця ката містить два слова з одним пробілом між ними. На виході має бути дві великі літери з крапкою. Це має виглядати так:

//* Сем Харріс => S.H

//* Патрік Фіні => P.F

// function abbrevName(name) {
//    let arr = name.split(' ');
//    let initials = arr.map((item) => item.slice(0, 1)).join('.');
//    return initials.toUpperCase();
// }

// console.log(abbrevName('taras shevchenko'));

// TODO Завершіть функцію суми квадратів, щоб вона звела в квадрат кожне передане їй число, а потім підсумувала результати.

//* Наприклад, for [1, 2, 2]має повернутися 9тому що

// function squareSum(numbers) {
//    let squares = numbers.map((num) => {
//       return num * num;
//    });
//    return squares.length !== 0 ? squares.reduce((a, b) => a + b) : 0;
// }

// console.log(squareSum([2, 3, 5]));

// TODO Музей неймовірно нудних речей. Музей неймовірно нудних речей хоче позбутися деяких експонатів. Міріам, архітектор інтер’єрів, придумує план прибрати найнудніші експонати. Вона дає їм оцінку, а потім видаляє того, хто має найнижчий рейтинг. Однак як тільки вона закінчила оцінювати всі експонати, вона вирушила на важливий ярмарок, тому вона просить вас написати програму, яка повідомлятиме їй рейтинги експонатів після видалення найнижчого. Справедливо. завдання

// TODO Дано масив цілих чисел, вилучіть найменше значення. Не змінюйте оригінальний масив/список. Якщо є кілька елементів з однаковим значенням, видаліть той із найнижчим індексом. Якщо ви отримуєте порожній масив/список, поверніть порожній масив/список. Не змінюйте порядок елементів, які залишилися.

// Приклади
// * Input: [1,2,3,4,5], output = [2,3,4,5]
// * Input: [5,3,2,1,4], output = [5,3,2,4]
// * Input: [2,2,1,2,1], output = [2,2,2,1]

// function removeSmallest(numbers) {
//    if (numbers.length === 0) {
//       return [];
//    }

//    let minValue = Math.min(...numbers);
//    let minIndex = numbers.indexOf(minValue);
//    return numbers.slice(0, minIndex).concat(numbers.slice(minIndex + 1));
// }

// console.log(removeSmallest([2, 3, 5, 1, 7, 1]));
// console.log(removeSmallest([]));

//TODO Створіть просту функцію під назвою greet, яка повертає найвідоміше "hello world!". Очки стилю Звичайно, це настільки просто, наскільки це можливо. Але наскільки розумним ви можете бути, щоб створити найкреативніший "привіт, світ", який тільки можете придумати? Яке рішення «привіт, світ» ви хотіли б показати своїм друзям?

// const greet = (sayHello) => sayHello;
// function greet() {
//    return 'hello world!';
// }
// console.log(greet('Hello World!'));

//TODO У маленькому місті чисельність населення становить p0 = 1000 на початку року. Населення регулярно збільшується на 2% з кожним роком і більше того, 50 щороку в місто приїжджають жити нові жителі. Скільки років потрібно місту, щоб його населення перевищувало або дорівнювало p = 1200 жителям?

//TODO Наприкінці першого року буде: 1000 + 1000 * 0,02 + 50 => 1070 мешканців.
//TODO Наприкінці 2 - го курсу буде:   житель(** кількість жителів є цілим числом **)
//TODO Наприкінці 3-го курсу буде: 1141 + 1141 * 0,02 + 50 => 1213 На це знадобиться цілих 3 роки.

//TODO Більш загальні параметри: p0, percent, aug (мешканців, які приїжджають або виїжджають щороку), p (населення дорівнювати або перевищувати).
//TODO функція nb_yearмає повертати nкількість повних років, необхідних для отримання чисельності населення, більшої або рівної p. aug — ціле число, відсоток — додатне або нульове плаваюче число, p0 і p — додатні цілі числа(> 0)

//TODO Примітка: Не забудьте перетворити параметр percent як відсоток у тілі вашої функції: якщо параметр percent дорівнює 2, ви повинні перетворити його на 0,02. Немає фракцій людей. Наприкінці кожного року чисельність населення є цілим числом: 252.8 округляються до 252 осіб.

// function nbYear(p0, percent, aug, p) {
//    let currentPopulation = p0;
//    let years = 0;

//    while (currentPopulation < p) {
//       currentPopulation +=
//          Math.floor(currentPopulation * (percent / 100)) + aug;
//       years++;
//    }

//    return years;
// }

// console.log(nbYear(1500, 5, 100, 5000));

// TODO На фабриці принтер друкує етикетки для коробок. Для одного типу коробок друкар має використовувати кольори, які для простоти названо літерами з a до m. Кольори, які використовує принтер, записуються в контрольний рядок. Наприклад, «хороший» контрольний рядок означатиме, aaabbbbhaijjjm що принтер використав тричі колір a, чотири рази b, один раз колір h, потім один раз колір a...

// TODO Іноді виникають проблеми: відсутність кольорів, технічна несправність і створюється "поганий" контрольний рядок, наприклад, aaaxbbbbyyhwawiwjjjwwm з літерами не з a до m. Ви повинні написати функцію printer_error, яка, заданий рядок, повертатиме частоту помилок принтера як рядок, що представляє раціональне число, чисельник якого є кількістю помилок, а знаменник – довжиною рядка керування.Не зводьте цей дріб до більш простого виразу.Рядок має довжину більше або дорівнює одиниці і містить лише літери від a до z.

//* s="aaabbbbhaijjjm"
//* printer_error(s) => "0/14"

//* s="aaaxbbbbyyhwawiwjjjwwm"
//* printer_error(s) => "8/22"

// function printerError(s) {
//    let strToArr = s.split('');

//    let numErrors = 0,
//       strLength = strToArr.length;

//    strToArr.forEach((item, i) => {
//       if (item.charCodeAt() > 109) {
//          numErrors++;
//       }
//    });

//    return String(`${numErrors}/${strLength}`);
// }

// // console.log(String.fromCharCode(97, 122));

// // m - 109

// console.log(printerError('aaaxbbbbyyhwawiwjjjwwm'));

// TODO Ваше завдання полягає в тому, щоб створити функцію, яка може приймати будь-яке невід’ємне ціле число як аргумент і повертати його разом із цифрами в порядку спадання. По суті, переставте цифри, щоб отримати найбільше можливе число.

//* Вхід: 42145 Вихід:54421
//* Вхід: 145263 Вихід:654321
//* Вхід: 123456789 Вихід:987654321

// function descendingOrder(n) {
//    let str = n.toString(),
//       newNumber = str.split('').sort((a, b) => b - a);
//    return +newNumber.join('');
// }

// console.log(descendingOrder(123549807));

// TODO Розгляньте масив/список овець, де деякі з овець можуть бути відсутні на своєму місці. Нам потрібна функція, яка підраховує кількість овець у масиві (true означає наявність). Підказка: не забудьте перевірити наявність неправильних значень, наприклад null/undefined

//* [true,  true,  true,  false,
//*   true,  true,  true,  true ,
//*   true,  false, true,  false,
//*   true,  false, false, true ,
//*   true,  true,  true,  true ,
//*   false, false, true,  true]
//* Правильною відповіддю буде 17.

// function countSheeps(sheep) {
//    let counter = 0;
//    sheep.map((item) => {
//       if (item === true) {
//          counter++;
//       }
//    });
//    return counter;
// }

// console.log(
//    countSheeps([
//       true,
//       true,
//       true,
//       false,
//       true,
//       true,
//       true,
//       true,
//       true,
//       false,
//       true,
//       false,
//       true,
//       false,
//       false,
//       true,
//       true,
//       true,
//       true,
//       true,
//       false,
//       false,
//       true,
//       true,
//    ])
// );

// TODO Ваше завдання полягає в тому, щоб створити дві функції ( maxі min, або maximum і minimum тощо, залежно від мови ), які отримуватимуть список цілих чисел як вхідні дані та повертатимуть найбільше та найменше число у цьому списку відповідно.

//* Приклади (Input -> Output)
//* * [4,6,2,1,9,63,-134,566]         -> max = 566, min = -134
//* * [-52, 56, 30, 29, -54, 0, -110] -> min = -110, max = 56
//* * [42, 54, 65, 87, 0]             -> min = 0, max = 87
//* * [5]                             -> min = 5, max = 5
//* Примітки
//* Ви можете вважати, що порожніх масивів/векторів не буде.

// let min = function (list) {
//    let arr = list;
//    return Math.min(...arr);
// };

// let max = function (list) {
//    let arr = list;
//    return Math.max(...arr);
// };

// console.log(min([5, 18, 79, 98, 3, 12])); // 3
// console.log(min([-158, -3, 28, 59, 79, 5])); // -158
// console.log(max([99, 36, 19, 95, 33, 44, 8])); // 99
// console.log(max([63, 669, 105, -4, 68, 777])); // 777

// TODO Історія: Боб працює водієм автобуса. Проте він став надзвичайно популярним серед мешканців міста. З такою кількістю пасажирів, які хочуть сісти в його автобус, йому іноді доводиться стикатися з проблемою, що в автобусі не вистачає місця! Він хоче, щоб ви написали просту програму, яка повідомляє йому, чи зможе він розмістити всіх пасажирів.

// TODO Огляд завдань: Ви повинні написати функцію, яка приймає три параметри: cap - це кількість людей, які може вмістити автобус, за винятком водія. on - кількість людей в автобусі без водія. wait це - кількість людей, які чекають на посадку в автобус, за винятком водія. Якщо місця достатньо, поверніть 0, а якщо немає, поверніть кількість пасажирів, яких він не може прийняти.

//* Приклади використання:
//* cap = 10, on = 5, wait = 5 --> 0 # Він може вмістити всіх 5 пасажирів
//* cap = 100, on = 60, wait = 50 --> 10 # Він не вміщує 10 із 50 чекаючих

// function enough(cap, on, wait) {
//    let num = cap - on;
//    return num > wait ? 0 : wait - num;
// }

// console.log(enough(100, 90, 50));
// console.log(enough(100, 90, 5));

// TODO Наша футбольна команда завершила чемпіонат. Результати матчів нашої команди записуються в колекцію рядків. Кожен матч представлено рядком у форматі "x:y", де x– рахунок нашої команди, а y – рахунок наших суперників.

//* Наприклад: ["3:1", "2:2", "0:1", ...]

// TODO Очки нараховуються за кожен матч таким чином:
// TODO якщо x > y: 3 бали (перемога)
// TODO якщо x < y: 0 балів (програш)
// TODO якщо x = y: 1 бал (рівня)
// TODO Нам потрібно написати функцію, яка приймає цю колекцію та повертає кількість очок, які наша команда ( x) отримала в чемпіонаті за правилами, наведеними вище.

// TODO Примітки: наша команда завжди грає 10 матчів у чемпіонаті
// TODO 0 <= x <= 4
// TODO 0 <= y <= 4

// let arr = [
//       '3:1',
//       '2:2',
//       '0:1',
//       '1:1',
//       '1:3',
//       '2:3',
//       '5:0',
//       '1:0',
//       '1:5',
//       '2:1',
//    ], // 14
//    arr2 = [
//       '1:0',
//       '2:0',
//       '3:0',
//       '4:0',
//       '2:1',
//       '3:1',
//       '4:1',
//       '3:2',
//       '4:2',
//       '4:3',
//    ], //30
//    arr3 = [
//       '1:1',
//       '2:2',
//       '3:3',
//       '4:4',
//       '2:2',
//       '3:3',
//       '4:4',
//       '3:3',
//       '4:4',
//       '4:4',
//    ]; // 10

// function points(games) {
//    let count = 0;
//    games.forEach((pair) => {
//       let [first, second] = pair.split(':');

//       if (first > second) {
//          count += 3;
//       } else if (first == second) {
//          count += 1;
//       } else if (first < second) {
//          count += 0;
//       }
//    });

//    return count;
// }

// console.log(points(arr));
// console.log(points(arr2));
// console.log(points(arr3));

// TODO Мета цієї вправи полягає в тому, щоб перетворити рядок на новий рядок, де кожен символ у новому рядку є таким, "("якщо цей символ з’являється лише один раз у вихідному рядку або ")"якщо цей символ з’являється більше одного разу у вихідному рядку. Ігноруйте великі літери, коли визначаєте, чи є символ дублікатом. Приклади

//* "din"      =>  "((("
//* "recede"   =>  "()()()"
//* "Success"  =>  ")())())"
//* "(( @"     =>  "))(("
//* Примітки
//* Повідомлення про твердження можуть бути незрозумілими щодо того, що вони відображають у деяких мовах. Якщо ви читаєте "...It Should encode XXX", це "XXX"очікуваний результат, а не вхідні дані!

function duplicateEncode(word) {
   let charCount = {};

   for (let char of word) {
      charCount[char] = (charCount[char] || 0) + 1;
   }
   let result = '';
   for (let char of word) {
      if (charCount[char] > 1) {
         result += ')';
      } else {
         result += '(';
      }
   }

   return result;
}

// const pass = prompt('Password');
// console.log(pass.replace(/./g, '*'));

console.log(duplicateEncode('din'));
console.log(duplicateEncode('recede'));
console.log(duplicateEncode('Success'));
console.log(duplicateEncode('(( @'));
